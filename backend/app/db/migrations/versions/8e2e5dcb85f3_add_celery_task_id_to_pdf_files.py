"""Add celery_task_id to pdf_files

Revision ID: 8e2e5dcb85f3
Revises: 
Create Date: 2025-09-16 20:29:44.223655

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8e2e5dcb85f3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organizations_created_at'), 'organizations', ['created_at'], unique=False)
    op.create_index(op.f('ix_organizations_is_active'), 'organizations', ['is_active'], unique=False)
    op.create_index(op.f('ix_organizations_name'), 'organizations', ['name'], unique=False)
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_table('projects',
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_created_at'), 'projects', ['created_at'], unique=False)
    op.create_index(op.f('ix_projects_is_active'), 'projects', ['is_active'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_organization_id'), 'projects', ['organization_id'], unique=False)
    op.create_table('user_organizations',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'QA', 'ANNOTATOR', 'VIEWER', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'organization_id', name='unique_user_org')
    )
    op.create_index(op.f('ix_user_organizations_created_at'), 'user_organizations', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_organizations_organization_id'), 'user_organizations', ['organization_id'], unique=False)
    op.create_index(op.f('ix_user_organizations_role'), 'user_organizations', ['role'], unique=False)
    op.create_index(op.f('ix_user_organizations_user_id'), 'user_organizations', ['user_id'], unique=False)
    op.create_table('pdf_files',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('s3_path', sa.String(length=512), nullable=False),
    sa.Column('upload_path', sa.String(length=512), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('UPLOADED', 'PARSING', 'PARSED', 'FAILED', name='filestatus'), nullable=False),
    sa.Column('total_pages', sa.Integer(), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('processing_started_at', sa.String(), nullable=True),
    sa.Column('processing_completed_at', sa.String(), nullable=True),
    sa.Column('celery_task_id', sa.String(length=255), nullable=True),
    sa.Column('uploaded_by', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pdf_files_celery_task_id'), 'pdf_files', ['celery_task_id'], unique=False)
    op.create_index(op.f('ix_pdf_files_created_at'), 'pdf_files', ['created_at'], unique=False)
    op.create_index(op.f('ix_pdf_files_file_name'), 'pdf_files', ['file_name'], unique=False)
    op.create_index(op.f('ix_pdf_files_project_id'), 'pdf_files', ['project_id'], unique=False)
    op.create_index(op.f('ix_pdf_files_status'), 'pdf_files', ['status'], unique=False)
    op.create_index(op.f('ix_pdf_files_uploaded_by'), 'pdf_files', ['uploaded_by'], unique=False)
    op.create_table('user_projects',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'QA', 'ANNOTATOR', 'VIEWER', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'project_id', name='unique_user_project')
    )
    op.create_index(op.f('ix_user_projects_created_at'), 'user_projects', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_projects_project_id'), 'user_projects', ['project_id'], unique=False)
    op.create_index(op.f('ix_user_projects_role'), 'user_projects', ['role'], unique=False)
    op.create_index(op.f('ix_user_projects_user_id'), 'user_projects', ['user_id'], unique=False)
    op.create_table('export_logs',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('file_id', sa.UUID(), nullable=True),
    sa.Column('export_type', sa.Enum('JSON', 'TXT', 'ZIP', name='exporttype'), nullable=False),
    sa.Column('path', sa.String(length=512), nullable=False),
    sa.Column('total_records', sa.Integer(), nullable=True),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('export_params', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['pdf_files.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_export_logs_created_at'), 'export_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_export_logs_export_type'), 'export_logs', ['export_type'], unique=False)
    op.create_index(op.f('ix_export_logs_file_id'), 'export_logs', ['file_id'], unique=False)
    op.create_index(op.f('ix_export_logs_project_id'), 'export_logs', ['project_id'], unique=False)
    op.create_table('parsed_tables',
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.Column('page_number', sa.Integer(), nullable=False),
    sa.Column('schema_json', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('detector', sa.String(length=50), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('extraction_flavor', sa.String(length=50), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['pdf_files.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parsed_tables_confidence'), 'parsed_tables', ['confidence'], unique=False)
    op.create_index(op.f('ix_parsed_tables_created_at'), 'parsed_tables', ['created_at'], unique=False)
    op.create_index(op.f('ix_parsed_tables_detector'), 'parsed_tables', ['detector'], unique=False)
    op.create_index(op.f('ix_parsed_tables_file_id'), 'parsed_tables', ['file_id'], unique=False)
    op.create_index(op.f('ix_parsed_tables_page_number'), 'parsed_tables', ['page_number'], unique=False)
    op.create_table('tasks',
    sa.Column('table_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('assigned_to', sa.UUID(), nullable=True),
    sa.Column('status', sa.Enum('AWAITING_DRAFT', 'READY_FOR_ANNOTATION', 'IN_PROGRESS', 'COMPLETED', 'QA_PENDING', 'QA_DONE', 'REASSIGNED', 'DRAFT_FAILED', name='taskstatus'), nullable=False),
    sa.Column('draft_status', sa.Enum('QUEUED', 'GENERATING', 'SUCCEEDED', 'FAILED', name='draftstatus'), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('allocation_hold', sa.Boolean(), nullable=False),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.String(), nullable=True),
    sa.Column('started_at', sa.String(), nullable=True),
    sa.Column('completed_at', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['table_id'], ['parsed_tables.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_assigned_to'), 'tasks', ['assigned_to'], unique=False)
    op.create_index(op.f('ix_tasks_created_at'), 'tasks', ['created_at'], unique=False)
    op.create_index(op.f('ix_tasks_draft_status'), 'tasks', ['draft_status'], unique=False)
    op.create_index(op.f('ix_tasks_priority'), 'tasks', ['priority'], unique=False)
    op.create_index(op.f('ix_tasks_project_id'), 'tasks', ['project_id'], unique=False)
    op.create_index(op.f('ix_tasks_status'), 'tasks', ['status'], unique=False)
    op.create_index(op.f('ix_tasks_table_id'), 'tasks', ['table_id'], unique=False)
    op.create_table('ai_drafts',
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('prompt_version', sa.String(length=50), nullable=False),
    sa.Column('prompt_hash', sa.String(length=64), nullable=False),
    sa.Column('draft_text', sa.Text(), nullable=False),
    sa.Column('trace_json', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('usage', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('generation_time_ms', sa.Integer(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_drafts_created_at'), 'ai_drafts', ['created_at'], unique=False)
    op.create_index(op.f('ix_ai_drafts_model_name'), 'ai_drafts', ['model_name'], unique=False)
    op.create_index(op.f('ix_ai_drafts_prompt_hash'), 'ai_drafts', ['prompt_hash'], unique=False)
    op.create_index(op.f('ix_ai_drafts_prompt_version'), 'ai_drafts', ['prompt_version'], unique=False)
    op.create_index(op.f('ix_ai_drafts_task_id'), 'ai_drafts', ['task_id'], unique=True)
    op.create_table('human_edits',
    sa.Column('draft_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('edited_text', sa.Text(), nullable=False),
    sa.Column('edit_reason', sa.String(length=255), nullable=True),
    sa.Column('time_spent_minutes', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['draft_id'], ['ai_drafts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_human_edits_created_at'), 'human_edits', ['created_at'], unique=False)
    op.create_index(op.f('ix_human_edits_draft_id'), 'human_edits', ['draft_id'], unique=False)
    op.create_index(op.f('ix_human_edits_user_id'), 'human_edits', ['user_id'], unique=False)
    op.create_table('qa_checks',
    sa.Column('edit_id', sa.UUID(), nullable=False),
    sa.Column('reviewer_id', sa.UUID(), nullable=False),
    sa.Column('result', sa.Enum('PASS', 'FAIL', name='qaresult'), nullable=False),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('review_time_minutes', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['edit_id'], ['human_edits.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_qa_checks_created_at'), 'qa_checks', ['created_at'], unique=False)
    op.create_index(op.f('ix_qa_checks_edit_id'), 'qa_checks', ['edit_id'], unique=False)
    op.create_index(op.f('ix_qa_checks_result'), 'qa_checks', ['result'], unique=False)
    op.create_index(op.f('ix_qa_checks_reviewer_id'), 'qa_checks', ['reviewer_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_qa_checks_reviewer_id'), table_name='qa_checks')
    op.drop_index(op.f('ix_qa_checks_result'), table_name='qa_checks')
    op.drop_index(op.f('ix_qa_checks_edit_id'), table_name='qa_checks')
    op.drop_index(op.f('ix_qa_checks_created_at'), table_name='qa_checks')
    op.drop_table('qa_checks')
    op.drop_index(op.f('ix_human_edits_user_id'), table_name='human_edits')
    op.drop_index(op.f('ix_human_edits_draft_id'), table_name='human_edits')
    op.drop_index(op.f('ix_human_edits_created_at'), table_name='human_edits')
    op.drop_table('human_edits')
    op.drop_index(op.f('ix_ai_drafts_task_id'), table_name='ai_drafts')
    op.drop_index(op.f('ix_ai_drafts_prompt_version'), table_name='ai_drafts')
    op.drop_index(op.f('ix_ai_drafts_prompt_hash'), table_name='ai_drafts')
    op.drop_index(op.f('ix_ai_drafts_model_name'), table_name='ai_drafts')
    op.drop_index(op.f('ix_ai_drafts_created_at'), table_name='ai_drafts')
    op.drop_table('ai_drafts')
    op.drop_index(op.f('ix_tasks_table_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_status'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_project_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_priority'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_draft_status'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_created_at'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_assigned_to'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_parsed_tables_page_number'), table_name='parsed_tables')
    op.drop_index(op.f('ix_parsed_tables_file_id'), table_name='parsed_tables')
    op.drop_index(op.f('ix_parsed_tables_detector'), table_name='parsed_tables')
    op.drop_index(op.f('ix_parsed_tables_created_at'), table_name='parsed_tables')
    op.drop_index(op.f('ix_parsed_tables_confidence'), table_name='parsed_tables')
    op.drop_table('parsed_tables')
    op.drop_index(op.f('ix_export_logs_project_id'), table_name='export_logs')
    op.drop_index(op.f('ix_export_logs_file_id'), table_name='export_logs')
    op.drop_index(op.f('ix_export_logs_export_type'), table_name='export_logs')
    op.drop_index(op.f('ix_export_logs_created_at'), table_name='export_logs')
    op.drop_table('export_logs')
    op.drop_index(op.f('ix_user_projects_user_id'), table_name='user_projects')
    op.drop_index(op.f('ix_user_projects_role'), table_name='user_projects')
    op.drop_index(op.f('ix_user_projects_project_id'), table_name='user_projects')
    op.drop_index(op.f('ix_user_projects_created_at'), table_name='user_projects')
    op.drop_table('user_projects')
    op.drop_index(op.f('ix_pdf_files_uploaded_by'), table_name='pdf_files')
    op.drop_index(op.f('ix_pdf_files_status'), table_name='pdf_files')
    op.drop_index(op.f('ix_pdf_files_project_id'), table_name='pdf_files')
    op.drop_index(op.f('ix_pdf_files_file_name'), table_name='pdf_files')
    op.drop_index(op.f('ix_pdf_files_created_at'), table_name='pdf_files')
    op.drop_index(op.f('ix_pdf_files_celery_task_id'), table_name='pdf_files')
    op.drop_table('pdf_files')
    op.drop_index(op.f('ix_user_organizations_user_id'), table_name='user_organizations')
    op.drop_index(op.f('ix_user_organizations_role'), table_name='user_organizations')
    op.drop_index(op.f('ix_user_organizations_organization_id'), table_name='user_organizations')
    op.drop_index(op.f('ix_user_organizations_created_at'), table_name='user_organizations')
    op.drop_table('user_organizations')
    op.drop_index(op.f('ix_projects_organization_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_is_active'), table_name='projects')
    op.drop_index(op.f('ix_projects_created_at'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_organizations_name'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_is_active'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_created_at'), table_name='organizations')
    op.drop_table('organizations')
    # ### end Alembic commands ### 